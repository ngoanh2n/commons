###
### author: Ho Huu Ngoan (ngoanh2n@gmail.com)
###
version: 2.1

parameters:
  platform_windows: { type: string, default: windows }
  platform_macos: { type: string, default: macos }
  platform_linux: { type: string, default: linux }

executors:
  executor_windows:
    machine:
      image: windows-server-2022-gui:current
    shell: bash.exe
    resource_class: windows.medium
    environment:
      OS: <<pipeline.parameters.platform_windows>>
  executor_macos:
    macos:
      xcode: 13.4.1
    shell: /bin/bash
    resource_class: medium
    environment:
      OS: <<pipeline.parameters.platform_macos>>
  executor_linux:
    machine:
      image: ubuntu-2004:2022.07.1
    shell: /bin/bash
    resource_class: medium
    environment:
      OS: <<pipeline.parameters.platform_linux>>

commands:
  env_prepare:
    steps:
      - checkout
      - run:
          name: Prepare environment
          command: |
            chmod +x gradlew

            case $OS in
              <<pipeline.parameters.platform_windows>>)
                choco feature enable -n allowGlobalConfirmation
                choco install zip
              ;;
              <<pipeline.parameters.platform_macos>>)
                brew update
                brew install zip
              ;;
              <<pipeline.parameters.platform_linux>>)
                sudo apt update
                sudo apt install zip
              ;;
            esac
  cache_store:
    steps:
      - save_cache:
          name: Store Gradle cache
          paths:
            - ~/.gradle
          key: gradle-{{checksum "build.gradle"}}
  cache_restore:
    steps:
      - restore_cache:
          name: Restore Gradle cache
          key: gradle-{{checksum "build.gradle"}}
  artifact_compress:
    steps:
      - run:
          name: Compress JUnit report
          command: |
            cd build/reports
            zip -r junit-report.zip tests/test/*
  artifact_store:
    steps:
      - store_artifacts:
          name: Store JUnit report
          path: build/reports/junit-report.zip
          destination: junit-report
  test_execute:
    steps:
      - run:
          name: Execute the test
          command: ./gradlew clean test
          when: always

jobs:
  build_and_test:
    parameters:
      platform: { type: executor }
    executor: <<parameters.platform>>
    steps:
      - env_prepare
      - cache_restore
      - test_execute
      - artifact_compress
      - artifact_store
      - cache_store

workflows:
  test_execution:
    jobs:
      - build_and_test:
          name: <<matrix.platform>>
          filters:
            branches:
              only: master
          matrix:
            parameters:
              platform:
                - executor_windows
                - executor_macos
                - executor_linux
